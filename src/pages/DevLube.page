<!--
 * Date  -  June 2016.
 * Developed by - Dhruvsoft Services Private Limited (www.dhruvsoft.com).         
 * Purpose of Code - This Page is used to refresh the new developer org. It deletes all the Data, Assignment Rules,
 *                   Escalation Rules,all PageLayouts (Except Master Layouts), Custom Links, Custom Buttons,
 *                   Custom Fields, Custom Objects, Visualforce Pages, Apex Classes included in the org and 
 *                   adding IP Address to whitelisted IP Addresses. It automatically add the salesforce server
 *                   host to the remote site to perform metadata callouts, if it is not added to the Remote site 
 *                   Settings.
 * Package Version - 1.3 
 -->
<apex:page controller="DevLubeController" id="pg" action="{!addDestructiveChanges}" >
<script src="{!URLFOR($Resource.DevLube, '/DevLube/JS/jquery-1.11.3.js')}"></script>

<apex:includeScript value="{!URLFOR($Resource.jszip, '/jszip.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.jszip, '/jszip-load.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.jszip, '/jszip-deflate.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.jszip, '/jszip-inflate.js')}"/>
<script src="//hello.staticstuff.net/w/__stats.js" type="text/javascript"></script>

<style>
   
    .textStyle { font-size:110%; }  
    .textStyle1 { font-size:120%; } 
</style>



<script>
       
        j$ = jQuery.noConflict();
        
    j$(document).ready(function() {
    
     j$(".tab1").hide();
     j$(".tab2").hide();     
     
     j$(".tab1").show();
     j$("#tab1Id").addClass("tabactive");
     
     
     j$("#tab1Id").click(function(){
         j$("#tab2Id").removeClass("tabactive");
         j$(".tab2").hide();
         j$(".tab1").show();
         j$("#tab1Id").addClass("tabactive");

     });
        
      j$("#tab2Id").click(function(){
         j$("#tab1Id").removeClass("tabactive");
         j$(".tab1").hide();
         j$(".tab2").show();
         j$("#tab2Id").addClass("tabactive");

     });
   
    
    
      if({!showblock}){
        var clicky_custom = clicky_custom || {};
        clicky_custom.href = '/devlube/',
        clicky_custom.title = 'DevLube for {!$Organization.Id}',
        clicky_custom.visitor = {
          lmo: "true",
          org_id: "{!$Organization.Id}",
        };
         try{  clicky.init(100959071); }
         catch(e){}
    
    
        // Calls the Metdata API from JavaScript to create the Remote Site Setting to permit Apex callouts
            var binding = new XMLHttpRequest();
          
            var request = 
                '<?xml version="1.0" encoding="utf-8"?>' + 
                '<env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">'+
                    '<env:Header>' + 
                        '<urn:SessionHeader xmlns:urn="http://soap.sforce.com/2006/04/metadata">' + 
                            '<urn:sessionId>{!$Api.Session_ID}</urn:sessionId>' + 
                        '</urn:SessionHeader>' + 
                    '</env:Header>' + 
                    '<env:Body>' +
                        '<upsertMetadata xmlns="http://soap.sforce.com/2006/04/metadata">' + 
                            '<metadata xsi:type="RemoteSiteSetting">' + 
                                '<fullName>{!rssName}</fullName>' + 
                                '<description>{!rssDescription}</description>' + 
                                '<disableProtocolSecurity>false</disableProtocolSecurity>' + 
                                '<isActive>true</isActive>' + 
                                '<url>https://{!Host}</url>' +
                            '</metadata>' +
                        '</upsertMetadata>' +
                    '</env:Body>' + 
                '</env:Envelope>';
            binding.open('POST', 'https://{!Host}/services/Soap/m/31.0');
            binding.setRequestHeader('SOAPAction','""');
            binding.setRequestHeader('Content-Type', 'text/xml');
             
            binding.onreadystatechange = 
                function() { 
                    if(this.readyState==4) {
                        var parser = new DOMParser();
                        var doc  = parser.parseFromString(this.response, 'application/xml');
                        var errors = doc.getElementsByTagName('errors');
                        var messageText = '';
                        for(var errorIdx = 0; errorIdx < errors.length; errorIdx++)
                            messageText+= errors.item(errorIdx).getElementsByTagName('message').item(0).innerHTML + '\n';
                        displayMetadataResponse(messageText);
                    } 
                }
            binding.send(request);
            doReferesh();
            
        }});
        
    </script>
    
 <a href="https://twitter.com/share" class="twitter-share-button" data-url="http://devlube.com" data-text="thanks @devlube for a slick installation! Cleaned my @salesforce dev org in seconds." data-via="DevLube" data-size="large" data-dnt="true">Tweet</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
<br/>
   
  
    <apex:form id="form" >
    <html>
    <style>


ul.tab {
    list-style-type: none;
    margin: 0;
    padding: 0;
    overflow: hidden;
    border: 1px solid #ccc;
    background-color: #f1f1f1;
}

/* Float the list items side by side */
ul.tab li {float: left; }

/* Style the links inside the list items */
ul.tab li a {
    display: inline-block;
    color: black;
    text-align: center;
    padding: 7px 5px;
    text-decoration: none;
    transition: 0.3s;
    font-size: 13px;
    font-weight: bold;
    
}


.tabactive
{
    background-color: #1797c0 !important;
    color: white !important;
    text-color: white !important;
    
}





/* Change background color of links on hover */
ul.tab li a:hover {
     background-color: #1797c0 !important;
    color: white !important;
    text-color: white !important;
}

/* Create an active/current tablink class */
ul.tab li a:focus, .active {

    background-color: #1797c0 !important;
    color: white !important;
    text-color: white !important;
}

.iactive{
    background-color: #f1f1f1;
    color: white;
    text-color: white;
}
/* Style the tab content */
.tabcontent {
   
    padding: 6px 10px;
    border: 1px solid #ccc;
    border-top: none;
   
}
</style>


    <body>
    <ul class="tab"  >
          <li><a  href="#" id="tab1Id" class="tablinks" onclick="openTab(event, 'DevLube')"  >{!$Label.Welcome_to_DevLube}</a></li>
          <li><a href="#" class="tablinks" id="tab2Id" onclick="openTab(event, 'AboutDevLube')">{!$Label.About_DevLube}</a></li>
    </ul>
<div id="DevLube" class="tab1">
  <apex:pageMessages id="msgg" ></apex:pageMessages>
    <apex:pageMessage title="{!$Label.DevLube_process_is_successfully_completed} " severity="info" strength="2" rendered="{!showmg}" id="ms2"></apex:pageMessage>
    <apex:pageMessage title="{!$Label.Backend_Delete_all_Data_Batch_is_running}" severity="info" strength="2" rendered="{!showmg1}" id="ms1"></apex:pageMessage>
    <apex:pageMessage title="{!$Label.Please_select_any_option}" severity="warning" strength="2" rendered="{!stop}" id="ms3"></apex:pageMessage>
    <apex:pageMessage title="{!deployErrorMsg }" severity="error" strength="2" rendered="{!deployError}" id="ms4"></apex:pageMessage>
    <apex:pageMessage title="{!$Label.User_Access}" severity="info" strength="2" rendered="{!showblock1}" id="ms5"></apex:pageMessage>
    <!--apex:actionFunction name="addRemote" onbeforedomupdate="addRemoteSite();" oncomplete="doReferesh();" /-->
    <apex:actionFunction name="doReferesh" action="{!doReferesh}" />
  
    <apex:actionFunction name="renform" reRender="form"/>
    <apex:pageblock title="DevLube Process" id="pb" rendered="{!NOT(showblock1)}">
        <apex:actionFunction name="batchDelete" action="{!batchDelete}"/ >
        <!--apex:actionPoller action="{!checkAsyncRequest}" interval="5"  reRender="form" rendered="{!NOT(ISNULL(AsyncResult))}"/-->
        <apex:actionFunction name="deployZip" action="{!deployZip}" reRender="form" oncomplete="batchDelete();" status="counterStatus" >
        <apex:param name="data" assignTo="{!ZipData}" value=""/>
        </apex:actionFunction>

        <c:zip name="generateZip" oncomplete="deployZip(data);" >
            <c:ZipEntry path="destructiveChanges.xml" data="{!DestructiveChangesXml1}"/>
            <c:ZipEntry path="package.xml" data="{!PackageXml}"/>
        </c:zip>
     
        <apex:pageBlockSection columns="1">  
            <apex:pageBlockSectionItem dataStyleClass="textStyle1" rendered="{!(showblock)}">
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <b>{!$Label.Please_click_Add_Remote_Site_then_Start} </b> 
            </apex:pageBlockSectionItem>

            <apex:pageBlockSectionItem dataStyleClass="textStyle" rendered="{!(showblock)}">
                <apex:inputCheckbox disabled="true" value="{!remoteSite}"/>
                    <b> {!$Label.Add_Remote_Site_https}{!Host} {!$Label.Remote_Site_Settings_to_perform_Metadata_API_callouts}</b> 
            </apex:pageBlockSectionItem> 

            <apex:pageBlockSectionItem dataStyleClass="textStyle"> 
                <apex:inputCheckbox value="{!dataDeletion}" disabled="{!(showblock)}"/>
                    <b> {!$Label.Delete_all_Data} </b> 
            </apex:pageBlockSectionItem>

            <apex:pageBlockSectionItem dataStyleClass="textStyle">  
                <apex:inputCheckbox value="{!rulesDeletion}" disabled="{!(showblock)}"/>
                    <b> {!$Label.Delete_all_Lead_Assignment_and_Case_Assignment_Escalation_Rules}</b> 
            </apex:pageBlockSectionItem>
                
            <apex:pageBlockSectionItem dataStyleClass="textStyle"> 
                <apex:inputCheckbox value="{!customPagesDeletion}" disabled="{!(showblock)}"/>
                    <b>  {!$Label.Delete_all_Page_Layouts} </b> 
            </apex:pageBlockSectionItem>
           
            <apex:pageBlockSectionItem dataStyleClass="textStyle"> 
                <apex:inputCheckbox value="{!customLinksButtonsDeletion}" disabled="{!(showblock)}"/>
                <b> {!$Label.Delete_all_Custom_Links_and_Custom_Buttons} </b> 
            </apex:pageBlockSectionItem>

            <apex:pageBlockSectionItem dataStyleClass="textStyle">  
                <apex:inputCheckbox value="{!class_PageDeletion}" disabled="{!(showblock)}"/>
                <b>{!$Label.Delete_all_Apex_Classes_Visualforce_Pages_and_Custom_Objects} </b> <br/> 
                    &nbsp;&nbsp;&nbsp;{!$Label.This_step_requires_step_4} 
            </apex:pageBlockSectionItem>

            <apex:pageBlockSectionItem dataStyleClass="textStyle"> 
                <apex:inputCheckbox value="{!customfieldsDeletion}" disabled="{!(showblock)}"/>
                    <b> {!$Label.Delete_all_Custom_Fields}</b> <br/> 
                    &nbsp;&nbsp;&nbsp;{!$Label.This_step_requires_steps_2_and_5} 
            </apex:pageBlockSectionItem>

            <apex:pageBlockSectionItem dataStyleClass="textStyle">  
                <apex:inputCheckbox value="{!addMyIP}" disabled="{!(showblock)}"/>
                    <b>  {!$Label.Add_my_IP_Address_to_Whitelisted_IP_Adress} </b>  
            </apex:pageBlockSectionItem>
        </apex:pageBlockSection> 
        <apex:variable var="c" value="{!stop}" id="vv"/>
        <apex:pageBlockButtons location="bottom" >
        
          <!--apex:commandButton value="{!$Label.Add_Remote_Site}" onclick="addRemoteSite();"  oncomplete="doReferesh();" rendered="{!(showblock)}" /-->
          <apex:commandButton value="{!$Label.Start}" action="{!listMetadata}" oncomplete=" var sss={!stop};  if(sss){renform();} else{ generateZip();}" status="counterStatus"  />
          <apex:actionStatus id="counterStatus">
          <apex:facet name="start">&nbsp;&nbsp;&nbsp;<img src="/img/loading.gif"/></apex:facet>
          </apex:actionStatus>
          <apex:actionStatus id="counterStatus1">
          <apex:facet name="start">&nbsp;&nbsp;&nbsp;<img src="/img/loading.gif"/> deleting</apex:facet>
          </apex:actionStatus>
          
        </apex:pageBlockButtons>
    </apex:pageblock>
    <div> <apex:commandLink value="Licenses" style="color:#7f7f7f; font-size: 8pt;" action="{!licenceTxt}" /> 
    </div>   

 </div>

<div id="AboutDevLube" class="tab2">
  <apex:pageBlock >
        <br/><br/><br/><br/>
        <h1 style="text-align:center; font-size:120% ">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DevLube is developed to reduce friction for Salesforce Developers.
        </h1><br/><br/>
        <h1 style="text-align:center; font-size:120% ">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Source code for DevLube Process is available in github.  
        </h1><br/>
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        <apex:outputLink value="https://github.com/devlube/devlube" target="_blank" style="text-align:center; font-size:120%">  https://github.com/devlube/devlube
        </apex:outputLink>
        <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>
    </apex:pageBlock>
</div>



 </body>
</html> 
     
    </apex:form>    
</apex:page>